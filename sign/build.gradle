plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.diffplug.spotless' version '7.0.2'
    id 'groovy'
}

spotless {
    java {
        palantirJavaFormat()
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }

    groovy {
        target 'src/test/groovy/**/*.groovy'
        removeSemicolons()
        importOrder()
        greclipse('4.32').configProperties("""\
          org.eclipse.jdt.core.formatter.tabulation.char=space
          org.eclipse.jdt.core.formatter.tabulation.size=4
    """.stripIndent())
    }

    groovyGradle {
        target '*.gradle' // default target of groovyGradle
        greclipse().configProperties("""\
          org.eclipse.jdt.core.formatter.tabulation.char=space
          org.eclipse.jdt.core.formatter.tabulation.size=4
          groovy.formatter.removeUnusedImports=true
    """.stripIndent())
    }
}

java {
    sourceCompatibility = '17'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation libs.guava
    implementation 'org.springframework.boot:spring-boot-starter'
    //implementation 'org.springframework:spring-webflux:5.3.28'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.projectlombok:lombok'
    implementation 'org.json:json:20250107'

    annotationProcessor 'org.projectlombok:lombok'

    // Use the latest Groovy version for Spock testing
    testImplementation libs.groovy
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation libs.spock.spring
    // Use the awesome Spock testing and specification framework even with Java
    testImplementation libs.spock.core
    testImplementation libs.junit

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
